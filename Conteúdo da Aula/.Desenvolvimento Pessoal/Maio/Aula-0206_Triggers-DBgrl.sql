-- ============= Aula 02/06 =================
-- Trigger para validar a inserção de email na tabela

SELECT length(email) - length(replace(email, '@', '')), email from usuario;

DROP TRIGGER IF EXISTS ANTES_INSERT_USUARIO;
DELIMITER $$
CREATE TRIGGER ANTES_INSERT_USUARIO BEFORE INSERT
ON USUARIO
FOR EACH ROW
BEGIN
IF NOT (LENGTH(new.email) - LENGTH(replace(new.email, '@', ''))) = 1 THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'E-mail inválido';
END IF;
END $$
DELIMITER ;

INSERT INTO USUARIO(nome, email) VALUES ('luiz','');

-- =========================

DROP TRIGGER IF EXISTS ANTES_UPDATE_USUARIO;
DELIMITER $$
CREATE TRIGGER ANTES_UPDATE_USUARIO BEFORE UPDATE
ON USUARIO
FOR EACH ROW
BEGIN
IF NOT (LENGTH(new.email) - LENGTH(replace(new.email, '@', ''))) = 1 THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'E-mail inválido';
END IF;
END $$
DELIMITER ;

UPDATE USUARIO SET EMAIL = '' WHERE ID_USUARIO = 1;

-- =================
DROP TABLE IF EXISTS TH_USUARIO;
CREATE TABLE TH_USUARIO(
ID_AUDITORIA INT AUTO_INCREMENT
    , ID_USUARIO INT NOT NULL
    , NOME VARCHAR(200)
    , EMAIL VARCHAR(200)
    , OPERACAO VARCHAR(30)
    , DATA_HORA DATETIME DEFAULT NOW()
    , USUARIO_BANCO VARCHAR(100) NOT NULL
    , CONSTRAINT PK_TH_USUARIO PRIMARY KEY (ID_AUDITORIA)
);

-- ===
DROP TRIGGER IF EXISTS DEPOIS_INSERT_USUARIO;
DELIMITER __
CREATE TRIGGER DEPOIS_INSERT_USUARIO AFTER INSERT
    ON USUARIO
    FOR EACH ROW
BEGIN
INSERT INTO TH_USUARIO(ID_USUARIO, NOME, EMAIL, OPERACAO, USUARIO_BANCO)
            VALUES(NEW.ID_USUARIO, NEW.NOME, NEW.EMAIL, 'INSERT', CURRENT_USER());
END __
DELIMITER ;

INSERT INTO USUARIO (NOME, EMAIL) VALUES ('Guilherme', 'guilherme@gmail.com');
SELECT * FROM TH_USUARIO;
SELECT * FROM USUARIO;

-- ===========
DROP TRIGGER IF EXISTS DEPOIS_UPDATE_USUARIO;

DELIMITER **
CREATE TRIGGER DEPOIS_UPDATE_USUARIO AFTER UPDATE
ON USUARIO
    FOR EACH ROW
BEGIN
INSERT INTO TH_USUARIO(ID_USUARIO, NOME, EMAIL, OPERACAO, USUARIO_BANCO)
            VALUES (NEW.ID_USUARIO, NEW.NOME, NEW.EMAIL, 'UPDATE', CURRENT_USER());
END **
DELIMITER ;

UPDATE USUARIO SET NOME = 'Rodrigo', EMAIL = 'rodrigo@gmail.com' WHERE ID_USUARIO = 8;
SELECT * FROM TH_USUARIO;

SET @QT = (SELECT COUNT(*) FROM LOCADORA.CLIENTE);
SET @ID = ROUND(RAND()*@QT) + 1;
SET @NOME = (SELECT CONCAT_WS(PRIMEIRO_NOME, '', ULTIMO_NOME) FROM LOCADORA.CLIENTE WHERE CLIENTE_ID = @ID);
SET @EMAIL = (SELECT EMAIL FROM LOCADORA.CLIENTE WHERE CLIENTE_ID = @ID);
SET @QTU = (SELECT COUNT(*) FROM DBGERAL.USUARIO);
SET @IDU = ROUND(RAND() * @QTU) + 1;

UPDATE DBGERAL.USUARIO
SET NOME = @NOME, EMAIL = @EMAIL
    WHERE ID_USUARIO = @IDU;

INSERT INTO DBGERAL.USUARIO(NOME, EMAIL) VALUES (@NOME, @EMAIL);

DROP TRIGGER IF EXISTS DEPOIS_DELETE_USUARIO;

DELIMITER $$
CREATE TRIGGER DEPOIS_DELETE_USUARIO AFTER DELETE
    ON USUARIO
    FOR EACH ROW
BEGIN
INSERT INTO TH_USUARIO(ID_USUARIO, NOME, EMAIL, OPERACAO, USUARIO_BANCO)
            VALUES(OLD.ID_USUARIO, OLD.NOME, OLD.EMAIL, 'DELETE', CURRENT_USER());
END $$
DELIMITER ;

SET @IDU = ROUND(RAND() * @QTU) + 1;
DELETE FROM DBGERAL.USUARIO WHERE ID_USUARIO = @IDU;

SELECT * FROM TH_USUARIO;
SELECT * FROM USUARIO;