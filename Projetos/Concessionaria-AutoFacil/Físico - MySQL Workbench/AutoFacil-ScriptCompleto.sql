DROP DATABASE IF EXISTS DB_AUTOFACIL;
CREATE DATABASE DB_AUTOFACIL;
USE DB_AUTOFACIL;

CREATE TABLE ATFTB001_CLIENTE (
    ID_CLIENTE INT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial do cliente.' ,
    NR_CPF CHAR(11) NOT NULL COMMENT 'N√∫mero do Cadastro de Pessoa F√≠sica do cliente.',
    NO_CLIENTE VARCHAR(200) NOT NULL COMMENT 'Nome do cliente.',
    CONSTRAINT PK_ATFTB001 PRIMARY KEY (ID_CLIENTE),
    CONSTRAINT UK01_ATFTB001 UNIQUE (NO_CLIENTE, NR_CPF)
) COMMENT = 'Armazena dados sobre os clientes da concession√°ria.';

CREATE TABLE ATFTB002_VENDEDOR (
    ID_VENDEDOR INT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial do vendedor.',
    NR_MATRICULA BIGINT NOT NULL COMMENT 'N√∫mero da matr√≠cula do vendedor.',
    NO_VENDEDOR VARCHAR(200) NOT NULL COMMENT 'Nome do vendedor.',
    CONSTRAINT PK_ATFTB002 PRIMARY KEY (ID_VENDEDOR),
    CONSTRAINT UK01_ATFTB002 UNIQUE (NR_MATRICULA, NO_VENDEDOR)
) COMMENT = 'Armazena dados sobre os vendedores da concession√°ria.';


CREATE TABLE ATFTB003_VEICULO (
    ID_VEICULO BIGINT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial do ve√≠culo.',
    NO_MODELO VARCHAR(50) NOT NULL COMMENT 'Nome do modelo do ve√≠culo.',
    NO_MARCA VARCHAR(50) NOT NULL COMMENT 'Nome da marca do ve√≠culo.',
    AN_FABRICACAO INT NOT NULL COMMENT 'Ano de fabrica√ß√£o do ve√≠culo.',
    VL_VEICULO DECIMAL(10,2) NOT NULL COMMENT 'Valor do ve√≠culo.',
    IC_STATUS CHAR(1) NOT NULL COMMENT 'Indicador da disponibilidade: D - Dispon√≠vel / V - Vendido.',
    CONSTRAINT PK_ATFTB003 PRIMARY KEY (ID_VEICULO),
    CONSTRAINT CC01_ATFTB003 CHECK (IC_STATUS IN ('D', 'V'))
) COMMENT = 'Armazena dados sobre os ve√≠culos da concession√°ria.';


CREATE TABLE ATFTB004_VENDA (
    ID_VENDA BIGINT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial da venda.',
    DT_VENDA DATE NOT NULL COMMENT 'Data em que a venda foi realizada.',
    ID_CLIENTE INT NOT NULL COMMENT 'Identificador do cliente que realizou a venda.',
    ID_VENDEDOR INT NOT NULL COMMENT 'Identificador do vendedor que realizou a venda.',
    CONSTRAINT PK_ATFTB004 PRIMARY KEY (ID_VENDA),
    CONSTRAINT FK01_ATFTB001_ATFTB004 FOREIGN KEY (ID_CLIENTE) 
		REFERENCES ATFTB001_CLIENTE(ID_CLIENTE),
	CONSTRAINT FK02_ATFTB002_ATFTB004 FOREIGN KEY (ID_VENDEDOR)
		REFERENCES ATFTB002_VENDEDOR (ID_VENDEDOR)
) COMMENT = 'Armazena dados sobre as vendas realizadas na concession√°ria.';

CREATE TABLE ATFTB005_VENDA_VEICULO(
	ID_VENDA BIGINT COMMENT 'Identificador da venda.',
    ID_VEICULO BIGINT COMMENT 'Identificador do ve√≠culo',
    CONSTRAINT PK_ATFTB005 PRIMARY KEY (ID_VENDA, ID_VEICULO),
    CONSTRAINT FK01_ATFTB004_ATFTB005 FOREIGN KEY (ID_VENDA)
		REFERENCES ATFTB004_VENDA (ID_VENDA),
	CONSTRAINT FK02_ATFTB003_ATFTB005 FOREIGN KEY (ID_VEICULO)
		REFERENCES ATFTB003_VEICULO (ID_VEICULO)
) COMMENT = 'Tabela associativa entre ve√≠culos e vendas.';

CREATE TABLE ATFTB101_TELEFONE_CLIENTE (
    ID_TELEFONE_CLIENTE INT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial do telefone do cliente.',
    ID_CLIENTE INT NOT NULL COMMENT 'Identificador do cliente.',
    NR_TELEFONE VARCHAR(25) NOT NULL COMMENT 'N√∫mero de telefone.',
    IC_TIPO_TELEFONE CHAR(1) NOT NULL DEFAULT 'P' COMMENT 'Indicador do tipo do telefone: (C - Comercial, P - Pessoal, T - Trabalho)',
    CONSTRAINT PK_ATFTB101 PRIMARY KEY (ID_TELEFONE_CLIENTE),
    CONSTRAINT FK01_ATFTB001_ATFTB101 FOREIGN KEY (ID_CLIENTE)
        REFERENCES ATFTB001_CLIENTE (ID_CLIENTE),
    CONSTRAINT CC01_ATFTB101 CHECK (IC_TIPO_TELEFONE IN ('C', 'P', 'T'))
) COMMENT = 'Armazena dados dos telefones do cliente.';

CREATE TABLE ATFTB102_TELEFONE_VENDEDOR (
    ID_TELEFONE_VENDEDOR INT AUTO_INCREMENT COMMENT 'Identificador √∫nico serial do telefone do vendedor.',
    ID_VENDEDOR INT NOT NULL COMMENT 'Identificador do vendedor.',
    NR_TELEFONE_VENDEDOR VARCHAR(20) NOT NULL COMMENT 'N√∫mero de telefone do vendedor.',
    IC_TIPO_TELEFONE CHAR(1) NOT NULL DEFAULT 'P' COMMENT 'Indicador do tipo de telefone: (T - Trabalho, P - Pessoal).',
    CONSTRAINT PK_ATFTB102 PRIMARY KEY (ID_TELEFONE_VENDEDOR),
    CONSTRAINT FK01_ATFTB002_ATFTB102 FOREIGN KEY (ID_VENDEDOR)
        REFERENCES ATFTB002_VENDEDOR (ID_VENDEDOR),
    CONSTRAINT CC01_ATFTB102 CHECK (IC_TIPO_TELEFONE IN ('P', 'T'))
) COMMENT = 'Armazena dados dos telefones dos vendedores.';

-- TRIGGERS
DELIMITER $$

CREATE TRIGGER TR01_ATFB005
AFTER INSERT ON ATFTB005_VENDA_VEICULO
FOR EACH ROW
BEGIN
    UPDATE ATFTB003_VEICULO
    SET IC_STATUS = 'V'
    WHERE ID_VEICULO = NEW.ID_VEICULO AND IC_STATUS <> 'V';
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER TR02_ATFB005
AFTER DELETE ON ATFTB005_VENDA_VEICULO
FOR EACH ROW
BEGIN
    DECLARE v_count INT;

    SELECT COUNT(*) INTO v_count
    FROM ATFTB005_VENDA_VEICULO
    WHERE ID_VEICULO = OLD.ID_VEICULO;

    IF v_count = 0 THEN
        UPDATE ATFTB003_VEICULO
        SET IC_STATUS = 'D'
        WHERE ID_VEICULO = OLD.ID_VEICULO;
    END IF;
END $$

DELIMITER ;

/*
Parte 4 - Inser√ß√£o de Dados
Insira os seguintes dados fict√≠cios no banco:

3 clientes
2 vendedores
10 ve√≠culos (alguns com status "Dispon√≠vel", outros "Vendido")
3 vendas com respectivos itens vendidos
*/

INSERT INTO ATFTB001_CLIENTE (NR_CPF, NO_CLIENTE)
	VALUES 
    (11122233344, "Ithallo"),
    (99988877766, "Leandro"),
    (12345678910, "Rodrigues"),
    (40028922227, "Barbosa");

INSERT INTO ATFTB002_VENDEDOR (NR_MATRICULA, NO_VENDEDOR) VALUES
	(556677, "Jo√£o Marcelo"),
    (987654, "Marcio");

INSERT INTO ATFTB003_VEICULO (NO_MODELO, NO_MARCA, AN_FABRICACAO, VL_VEICULO, IC_STATUS) VALUES
	('Civic', 'Honda', 2020, 85000.00, 'D'),
	('Corolla', 'Toyota', 2019, 78000.00, 'V'),
	('Gol', 'Volkswagen', 2018, 35000.00, 'D'),
	('Onix', 'Chevrolet', 2021, 62000.00, 'V'),
	('HB20', 'Hyundai', 2020, 58000.00, 'D'),
	('Compass', 'Jeep', 2022, 130000.00, 'D'),
	('Renegade', 'Jeep', 2019, 95000.00, 'D'),
	('Ka', 'Ford', 2017, 32000.00, 'D'),
	('Argo', 'Fiat', 2020, 55000.00, 'D'),
	('Tracker', 'Chevrolet', 2021, 110000.00, 'V');

INSERT INTO ATFTB004_VENDA (DT_VENDA, ID_CLIENTE, ID_VENDEDOR) VALUES
	(DATE(NOW()), 1, 1),
    ('2025-04-04', 2, 2),
    ('2025-05-05', 3, 1);

INSERT INTO ATFTB005_VENDA_VEICULO (ID_VENDA, ID_VEICULO) VALUES
	(1, 2),
    (2, 4),
    (3, 10);

INSERT INTO ATFTB101_TELEFONE_CLIENTE (ID_CLIENTE, NR_TELEFONE, IC_TIPO_TELEFONE)
SELECT ID_CLIENTE, '11999990001', 'P' FROM ATFTB001_CLIENTE WHERE ID_CLIENTE = 1;
INSERT INTO ATFTB101_TELEFONE_CLIENTE (ID_CLIENTE, NR_TELEFONE, IC_TIPO_TELEFONE)
SELECT ID_CLIENTE, '1133334444', 'C' FROM ATFTB001_CLIENTE WHERE ID_CLIENTE = 2;

INSERT INTO ATFTB102_TELEFONE_VENDEDOR (ID_VENDEDOR, NR_TELEFONE_VENDEDOR, IC_TIPO_TELEFONE)
SELECT ID_VENDEDOR, '11988887777', 'P' FROM ATFTB002_VENDEDOR WHERE ID_VENDEDOR = 1;
INSERT INTO ATFTB102_TELEFONE_VENDEDOR (ID_VENDEDOR, NR_TELEFONE_VENDEDOR, IC_TIPO_TELEFONE)
SELECT ID_VENDEDOR, '1122223333', 'T' FROM ATFTB002_VENDEDOR WHERE ID_VENDEDOR = 2;

/*
Parte 5 - Consultas SQL
Crie comandos SQL para responder:

Liste todos os ve√≠culos dispon√≠veis para venda.
Liste todas as vendas realizadas com nome do cliente, nome do vendedor e data.
Mostre os ve√≠culos vendidos em cada venda.
Liste o total de vendas (valor) por vendedor.
Mostre o total gasto por cada cliente.
Liste os ve√≠culos que ainda n√£o foram vendidos.
*/

-- 1) Liste todos os ve√≠culos dispon√≠veis para venda
SELECT *
FROM ATFTB003_VEICULO
WHERE IC_STATUS = 'D';

-- 2) Liste todas as vendas realizadas com nome do cliente, nome do vendedor e data.
SELECT
	NO_CLIENTE AS CLIENTE
,	NO_VENDEDOR AS VENDEDOR
,	DATE_FORMAT(DT_VENDA, '%d/%m/%Y') AS DATA_VENDA
FROM ATFTB004_VENDA TV
INNER JOIN ATFTB001_CLIENTE TC ON TC.ID_CLIENTE = TV.ID_CLIENTE
INNER JOIN ATFTB002_VENDEDOR TVE ON TVE.ID_VENDEDOR = TV.ID_VENDEDOR;

-- 3) Mostre os ve√≠culos vendidos em cada venda.
SELECT TVV.*, TV.NO_MODELO AS MODELO, TV.NO_MARCA AS MARCA, TV.AN_FABRICACAO AS "ANO DE FABRICA√á√ÉO", CONCAT('R$',FORMAT(VL_VEICULO, 2), " reais") AS VALOR
FROM ATFTB005_VENDA_VEICULO TVV
INNER JOIN ATFTB003_VEICULO TV ON TV.ID_VEICULO = TVV.ID_VEICULO;

-- 4) Liste o total de vendas (valor) por vendedor.
SELECT
	T2.ID_VENDEDOR
,	T2.NO_VENDEDOR
,	CONCAT("R$ ", FORMAT(SUM(T3.VL_VEICULO),2), " reais") AS 'VALOR DAS VENDAS'
FROM ATFTB004_VENDA T4
INNER JOIN ATFTB002_VENDEDOR T2 ON T2.ID_VENDEDOR = T4.ID_VENDEDOR
INNER JOIN ATFTB005_VENDA_VEICULO T5 ON T5.ID_VENDA = T4.ID_VENDA
INNER JOIN ATFTB003_VEICULO T3 ON T3.ID_VEICULO = T5.ID_VEICULO
GROUP BY T2.ID_VENDEDOR;

-- 5) Mostre o total gasto por cada cliente.
SELECT
	T1.ID_CLIENTE AS "ID do Cliente"
,	T1.NO_CLIENTE AS "Nome do Cliente"
,	CONCAT("R$ ", FORMAT(SUM(T3.VL_VEICULO),2), " reais") AS TOTAL_GASTO
FROM ATFTB004_VENDA T4
INNER JOIN ATFTB001_CLIENTE T1 ON T1.ID_CLIENTE = T4.ID_CLIENTE
INNER JOIN ATFTB005_VENDA_VEICULO T5 ON T5.ID_VENDA = T4.ID_VENDA
INNER JOIN ATFTB003_VEICULO T3 ON T3.ID_VEICULO = T5.ID_VEICULO
GROUP BY T1.ID_CLIENTE;

-- 6) Liste os ve√≠culos que ainda n√£o foram vendidos. Obs: n√£o vi diferen√ßa dessa pra 1 ü§∑‚Äç
SELECT *
FROM ATFTB003_VEICULO
WHERE IC_STATUS = 'D';

